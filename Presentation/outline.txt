Intro (Hi, I'm back)

    Greetings, My name is Kelby Stine.
    Hopefully most of you are having a good experience with Robocon.
    I am excited to be giving a live presentation.
    Since the first days of using Robot Framework I have had co-workers
        kid me about going to Finland and attending Robocon.
    Well- Here I am living the dream.

Let us begin with a story based off real life.


Story Time -
    Once Upon a time there was a team of software engineers
        who needed to test slices of their product.

    One part of the team decided to use Python to test their slice.

    The other part decided to use Robot Framework.

    Robot Framework got all the attention by borrowing code from Python.
    Importing Libraries, Special Keywords for Evaluating Python,
        even inline syntax.

    Eventually the Python team realized they could use some
        of the Robot Framework Libraries for themselves.

    So they put their solutions together.

    "We not only have Python in Robot Framework..."
    "Robot Framework is in our Python!"
    The End.

Scope:
    The intent of this presentation is a little bit of practical creativity.
    This is meant for the beginner to intermediate Robot Framework user.
    Maybe someone who has written a few python based RF libraries.
    For more advanced users this could get you thinking in a different mindset.

    By adding these few limits we prevent ourselves from going down a rabbit hole.

Use cases:
    Using RF libraries in python scripts as utilites.
        106 Builtin
        43 Collections
        8 Collections
        5 Dialogs
        56 OperatingSystem
        15 Process
        3 Screenshot
        32 String
        20 Telnet
        37 XML
        325 Total Keywords with a standard Robot Framework Install
    Leveraging RF within tools that are python only - (i.e. locust.io)

Dependencies:
    - hopefully part of a larger project
    - Do not install RF just to get the libraries (but maybe)
    - Some 3rd party libs have minimal required Dependencies

Examine how to use:

Importing and Inheritance:
    direct import
    direct import with as
    from import
    getting classy
    inheritance:
        cleaner, but if the script is used in RF
        will cause issues forced to use dot notation

Close look at a few keywords:
    - Standard libraries- BuiltIn
        Get Length: Length Should Be, Should Be Empty, Should Not Be Empty
    - 3rd Party- JSONLibrary (ng-jsonpath)
    - Libraries that rely on instances- Requests

Dangerous Keywords
    Keywords that rely on RF to be 'running'
    Maybe not worth mocking RF to leverage those KW
    Avoid going down the rabbit hole

Demo
    third part demo
    requests demo
    setup project

Closing thoughts
